// Code generated by wit-bindgen-go. DO NOT EDIT.

package plugin

import (
	"go.bytecodealliance.org/cm"
)

// Exports represents the caller-defined exports from "wasmcloud:wash/plugin@0.0.1".
var Exports struct {
	// Info represents the caller-defined, exported function "info".
	//
	// Called by wash to retrieve the plugin metadata. It's recommended to avoid
	// any computation or logging in this function as it's called on each command execution.
	//
	//	info: func() -> metadata
	Info func() (result Metadata)

	// Initialize represents the caller-defined, exported function "initialize".
	//
	// Called before any commands or hooks are executed so that the plugin could take
	// preflight actions
	// such as checking the environment, validating configuration, or preparing resources.
	// Note that
	// any in-memory state will _not_ be persisted in this component, and the plugin-config
	// store
	// should be used for any state that needs to be shared across commands or hooks.
	//
	//	initialize: func(runner: runner) -> result<string, string>
	Initialize func(runner Runner) (result cm.Result[string, string, string])

	// Run represents the caller-defined, exported function "run".
	//
	// Handle the execution of a given command. The resulting value should be the string
	// that will
	// be printed to the user, or an error message if the command failed.
	//
	//	run: func(runner: runner, cmd: command) -> result<string, string>
	Run func(runner Runner, cmd Command) (result cm.Result[string, string, string])

	// Hook represents the caller-defined, exported function "hook".
	//
	// Handle the execution of a given hook type. The resulting value should be the string
	// that will
	// be printed to the user, or an error message if the hook failed.
	//
	//	hook: func(runner: runner, hook: hook-type) -> result<string, string>
	Hook func(runner Runner, hook HookType) (result cm.Result[string, string, string])
}
